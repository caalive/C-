lesson11 第11节 多态

1. 什么是多态及多态的含义
2. 什么是虚函数及如何使用
    虚函数在类定义中是 virtual 关键字 来将一个函数声明为一个虚函数.作用就是子类充写了被virtual修饰的函数后,在调用时就会自动调用子类实现的重载的函数.由此实现根据传入的子类不同而调用不同子类所对应的方法.
3. 什么是抽象基类及如何声明一个抽象基类
    一个不能被实例化的基类就被称为,抽象基类.这样的基类存在的目的只有一个就是被继承.声明一个抽象基类的方式是使用纯虚函数.
    语法是 virtual funcName() = 0 // 虚函数后面 = 0 且没有实现,只有定义的就是纯虚函数
    这种表达方式就是告诉编译器,这个纯虚函数会被继承的子类实现.
4. 什么是虚继承及什么地方使用虚继承
5. 使用 new 关键字申请的堆内存,在创建一个指针对象时.待释放该指针后不会调用该类的析构函数.
但是会调用该父类的析构函数.这样会导致子类的虚函数不能被调用从而引起内存泄漏.
解决办法是将基类的析构函数声明为虚析构函数. 这样在子类申请动态内存被释放后,会先调用子类的析构函数然后在调用基类的析构函数. 在编程中被继承的类析构函数总是要声明为 虚析构函数. 切记

6. 总结
    第11节学习了 多态的使用及多态的实现.实现多态就是把需要调用的方法标记为 virtual 虚函数,然后在子类中对virtual 标记的函数进行重写.在调用函数时声明一个,基类的 引用参数
    在实现调用函数中去调用重写的方法就可以达到多态的目的.
    还有C++11 的关键字 final override. final的使用场景有两个:一个是限定继承的子类不能作为其它类的基类.在该子类继承基类时在 子类名后面 加上 final关键字 如: class Crap final: public Fish 则限定Crap类不能被其它类所继承.
    还有一个作用是在子类重写基类的纯虚函数加上 final 关键字限定后, 该子类被其它类继承时就不能再实现基类的纯虚函数了.
    一个基类如果声明了纯虚函数,则这个类就变成了抽象类了,而这些纯虚函数在被子类继承时必须实现.该基类,不能创建实例对象.
    使用虚继承来解决菱形继承所引发的创建多个实例的问题.
