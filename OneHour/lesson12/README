lesson12 第12节 操作符和操作符重载

1. 使用操作符
    操作符重载的语法是 类名加引用& 加上 操作符关键字 operator 重载的操作符号
    和函数定义大体上类似,然后就是具体的对类中的某个成员做操作符相关的操作
    Date& operator ++()  对日期类的某一天做增加操作然后返回这个类对象.
    {
        ++day;
        return *this;
    }
2. 一元和二元操作符
    一元操作符是只有一个操作数
    二元操作符是需要两个操作符
    声明语法是:
            return_type operator_type(parameter); // 一元
            return_type operator_type(parameter1, parameter2); // 二元  
3. 操作符转换
4. 移动赋值操作符
5. 操作符不能被重定义原因
6. 智能指针
    使用智能指针需要包含头文件 <memory> 智能指针声明及使用方式为:
        unique_ptr <varType> varName (new varType) 
        unique_ptr<int> smartIntPtr(new int);
        *smartIntPtr = 42;
        cout << *smartIntPtr << endl;
    智能指针提供了对常规指针的封装,在使用时不需要对申请的内存做手动释放操作,从而避免了指针使用导致内存泄漏的问题.
    智能指针是C11提供的新特性,在编译时如果编译器是C99标准则需要指明 -std=c++11 不然会导致编译不通过.
